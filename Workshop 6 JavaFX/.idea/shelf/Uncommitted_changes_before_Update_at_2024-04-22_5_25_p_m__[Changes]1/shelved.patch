Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module org.example.workshop6javafx {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n    \r\n\r\n\r\n    opens org.example.workshop6javafx to javafx.fxml;\r\n    exports org.example.workshop6javafx;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	
+++ b/src/main/java/module-info.java	
@@ -1,7 +1,7 @@
 module org.example.workshop6javafx {
     requires javafx.controls;
     requires javafx.fxml;
-    
+    requires java.sql;
 
 
     opens org.example.workshop6javafx to javafx.fxml;
Index: src/main/java/org/example/workshop6javafx/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Sample Skeleton for 'main-view.fxml' Controller Class\r\n */\r\n\r\npackage org.example.workshop6javafx;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.*;\r\nimport java.util.Properties;\r\nimport java.util.ResourceBundle;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.chart.CategoryAxis;\r\nimport javafx.scene.chart.LineChart;\r\nimport javafx.scene.chart.NumberAxis;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TreeTableColumn;\r\nimport javafx.scene.control.TreeTableView;\r\n\r\npublic class MainController {\r\n\r\n    @FXML // ResourceBundle that was given to the FXMLLoader\r\n    private ResourceBundle resources;\r\n\r\n    @FXML // URL location of the FXML file that was given to the FXMLLoader\r\n    private URL location;\r\n\r\n    @FXML // fx:id=\"btnAdd\"\r\n    private Button btnAdd; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"btnDelete\"\r\n    private Button btnDelete; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"btnEdit\"\r\n    private Button btnEdit; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"lcTravelerGraph\"\r\n    private LineChart<?, ?> lcTravelerGraph; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"lcXDate\"\r\n    private CategoryAxis lcXDate; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"lcYTravelerCount\"\r\n    private NumberAxis lcYTravelerCount; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"ttvBookings\"\r\n    private TreeTableView<Booking> ttvBookings; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"ttvColBooking\"\r\n    private TreeTableColumn<Booking, String> ttvColBooking; // Value injected by FXMLLoader\r\n\r\n    @FXML // fx:id=\"welcomeText\"\r\n    private Label welcomeText; // Value injected by FXMLLoader\r\n\r\n    private ObservableList<Booking> bookings = FXCollections.observableArrayList();\r\n\r\n    @FXML // This method is called by the FXMLLoader when initialization is complete\r\n    void initialize() {\r\n        assert btnAdd != null : \"fx:id=\\\"btnAdd\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert btnDelete != null : \"fx:id=\\\"btnDelete\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert btnEdit != null : \"fx:id=\\\"btnEdit\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert lcTravelerGraph != null : \"fx:id=\\\"lcTravelerGraph\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert lcXDate != null : \"fx:id=\\\"lcXDate\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert lcYTravelerCount != null : \"fx:id=\\\"lcYTravelerCount\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert ttvBookings != null : \"fx:id=\\\"ttvBookings\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert ttvColBooking != null : \"fx:id=\\\"ttvColBooking\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n        assert welcomeText != null : \"fx:id=\\\"welcomeText\\\" was not injected: check your FXML file 'main-view.fxml'.\";\r\n\r\n\r\n    }\r\n\r\n\r\n    private void getBookings(){\r\n        bookings.clear();\r\n\r\n        String url = \"\";\r\n        String user = \"\";\r\n        String password = \"\";\r\n\r\n        try {\r\n            FileInputStream fis = new FileInputStream(\"c:\\\\connection.properties\");\r\n            Properties prop = new Properties();\r\n            prop.load(fis);\r\n            url = (String) prop.get(\"url\");\r\n            user = (String) prop.get(\"user\");\r\n            password = (String) prop.get(\"password\");\r\n            Connection conn = DriverManager.getConnection(url, user, password);\r\n            Statement stmt = conn.createStatement();\r\n            ResultSet rs = stmt.executeQuery(\"select * from bookings\");\r\n            while(rs.next()){\r\n                bookings.add(new Booking(\r\n                        rs.getInt(1), rs.getDate(2).toString(),\r\n                        rs.getString(3), rs.getInt(4),\r\n                        rs.getInt(5), rs.getString(6)));\r\n            }\r\n            conn.close();\r\n        }  catch (IOException | SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/workshop6javafx/MainController.java b/src/main/java/org/example/workshop6javafx/MainController.java
--- a/src/main/java/org/example/workshop6javafx/MainController.java	
+++ b/src/main/java/org/example/workshop6javafx/MainController.java	
@@ -103,6 +103,29 @@
         }  catch (IOException | SQLException e) {
             throw new RuntimeException(e);
         }
+
+    }
+    public ResultSet getTravelData(String date, String destination) throws SQLException {
+        date =
+        try {
+            FileInputStream fis = new FileInputStream("c:\\connection.properties");
+            Properties prop = new Properties();
+            prop.load(fis);
+            String url = (String) prop.get("url");
+            String user = (String) prop.get("user");
+            String password = (String) prop.get("password");
+            Connection connection = DriverManager.getConnection(url, user, password);
+            String query = "SELECT COUNT(*) AS traveler_count "
+                    + "FROM bookings "
+                    + "WHERE booking_date = ? AND destination = ?";
+            PreparedStatement statement = connection.prepareStatement(query);
+            statement.setString(1, date);
+            statement.setString(2, destination);
+            return statement.executeQuery();
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+
     }
 
 
